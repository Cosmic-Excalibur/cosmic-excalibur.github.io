from Crypto.Util.number import *
from functools import reduce
import itertools
from tqdm import tqdm

cp = 11950858997012813763
cq = 4520939618822401845
cr = 8844180690999831301
cs = 573109408139129907886906
ct = 320830844868480195117225
cu = 435943571295739879336853
cv = 102378072707962058317004
cw = 586395959972024480242744
cx = 298220611556138459858440
cy = 748490897011199405784845
cz = 555239577043963350083001
N = 3051894145074946964892081546739249165152388989030253479819705007225781583459323768663991828047787099597539247295629680743347713301236979959688225611140167007428308561703447209320872554838091406557091034728024674379556190264723842615740396416410356609
e = 0x10001

p = 10675957053962043419
q = 9354603989443008841
r = 18142637370007560313
s = 874477631144547516656417
t = 616731256885779378669619
u = 659277714257194585234501
v = 1070216324958435392922817
w = 733512956178311394656173
x = 1180631507244313172259317
y = 1456816928952903451288321
z = 3508528846920815938385917

prod = lambda p: reduce(lambda a, b: a*b, p)
crt = lambda a, m: 0*(M := prod(m)) or sum(ai*(M//Mi)*pow(M//Mi, -1, Mi) for ai, Mi in zip(a, m)) % M

def fuck(p,q,r,s,t,u,v,w,x,y,z):
    return long_to_bytes(pow(crt([cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz], [p,q,r,s,t,u,v,w,x,y,z]), pow(e, -1, (p-1)*(q-1)*(r-1)*(s-1)*(t-1)*(u-1)*(v-1)*(w-1)*(x-1)*(y-1)*(z-1)), N))

for pqr in itertools.permutations([p,q,r], 3):
    for stuvwx in tqdm(itertools.permutations([s,t,u,v,w,x], 6), total = prod(range(1, 7))):
        m = fuck(*pqr, *stuvwx, y, z)
        if m.startswith(b'Spirit{'):
            print()
            print(m)
            break